version: '3.8'

services:
  # Slack MCP Server
  slack-mcp-server:
    image: ghcr.io/korotovsky/slack-mcp-server:latest
    container_name: slack-mcp-server
    ports:
      - "13080:13080"
    environment:
      - SLACK_MCP_XOXP_TOKEN=${SLACK_MCP_XOXP_TOKEN}
      - SLACK_MCP_PORT=13080
      - SLACK_MCP_HOST=0.0.0.0
      - SLACK_MCP_SSE_API_KEY=${SLACK_MCP_SSE_API_KEY}
      - SLACK_MCP_ADD_MESSAGE_TOOL=${SLACK_MCP_ADD_MESSAGE_TOOL}
    command: ["mcp-server", "--transport", "sse"]
    networks:
      - claude-slack-network
    restart: unless-stopped

  # Claude-Slack Bridge Server
  bridge-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: claude-slack-bridge
    ports:
      - "3000:3000"
    environment:
      # Slack Bot 설정
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_APP_TOKEN=${SLACK_APP_TOKEN}
      - SLACK_SIGNING_SECRET=${SLACK_SIGNING_SECRET}

      # Slack MCP 연결 설정
      - SLACK_MCP_URL=http://slack-mcp-server:13080
      - SLACK_MCP_API_KEY=${SLACK_MCP_SSE_API_KEY}

      # Claude Code 설정
      - WORKSPACE_DIR=/workspace
      - CLAUDE_PATH=claude
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}

      # 서버 설정
      - PORT=3000
    volumes:
      # 워크스페이스 볼륨 (Claude가 작업할 디렉토리)
      - workspace-data:/workspace
      # 호스트 Claude 인증 정보
      - ~/.claude:/host-claude:ro
    depends_on:
      - slack-mcp-server
    networks:
      - claude-slack-network
    restart: unless-stopped

networks:
  claude-slack-network:
    driver: bridge

volumes:
  workspace-data:
